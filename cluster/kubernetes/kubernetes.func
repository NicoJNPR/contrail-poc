
cluster_path=cluster/kubernetes

cluster_br_list="br-int br-r1"

server_list="master-1 node-1 node-2"

vm_cpu[master-1]=6
vm_ram[master-1]=65535
vm_disk[master-1]=100G
vm_os[master-1]=centos
vm_image_type[master-1]=volume
vm_address_list[master-1]="10.6.8.1        10.6.11.1"
vm_netmask_list[master-1]="255.255.255.0   255.255.255.0"
vm_gateway_list[master-1]="10.6.8.254      null"
vm_nic_list[master-1]="br=br-int br=br-r1"

vm_cpu[node-1]=4
vm_ram[node-1]=16384
vm_disk[node-1]=80G
vm_os[node-1]=centos
vm_image_type[node-1]=volume
vm_address_list[node-1]="10.6.8.2        10.6.11.2"
vm_netmask_list[node-1]="255.255.255.0   255.255.255.0"
vm_gateway_list[node-1]="10.6.8.254      null"
vm_nic_list[node-1]="br=br-int br=br-r1"

vm_cpu[node-2]=4
vm_ram[node-2]=16384
vm_disk[node-2]=80G
vm_os[node-2]=centos
vm_image_type[node-2]=volume
vm_address_list[node-2]="10.6.8.3        10.6.11.3"
vm_netmask_list[node-2]="255.255.255.0   255.255.255.0"
vm_gateway_list[node-2]="10.6.8.254      null"
vm_nic_list[node-2]="br=br-int br=br-r1"


launch_builder()
{
    local arr=(${vm_address_list[master-1]})
    local host=${arr[0]}

    echo "Launch builder..."
    copy_ssh_key $host
    ssh $host yum install -y ansible git
}

delete_builder()
{
    echo "Delete builder..."
}

pre_deployment()
{
    echo "Pre-Deployment"
}

load_playbook()
{
    local arr=(${vm_address_list[master-1]})
    local host=${arr[0]}

    echo "Upload playbook..."
    scp $contrail_playbook $host:./playbook.tgz
    ssh $host "tar -xzf playbook.tgz; rm -f playbook.tgz"
}

run_playbook()
{
    local arr=(${vm_address_list[master-1]})
    local host=${arr[0]}

    echo "Run playbook......"
    upload_instances_yaml $host

    ssh $host "cd contrail-ansible-deployer; \
            ansible-playbook -i inventory -e orchestrator=kubernetes \
            playbooks/configure_instances.yml"
    check_playbook_result
    if (( $? )); then return 1; fi

    ssh $host "cd contrail-ansible-deployer; \
            ansible-playbook -i inventory -e orchestrator=kubernetes \
            playbooks/install_k8s.yml"
    check_playbook_result
    if (( $? )); then return 1; fi

    ssh $host "cd contrail-ansible-deployer; \
            ansible-playbook -i inventory/ -e orchestrator=openstack \
            playbooks/install_contrail.yml"
    check_playbook_result
    if (( $? )); then return 1; fi
}

deploy()
{
    load_playbook
    run_playbook
}

post_deployment()
{
    echo "Post-Deployment"
    configure_haproxy
}

