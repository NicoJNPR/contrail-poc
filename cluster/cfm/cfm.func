
cluster_br_list="br-int br-r1"

server_list="command contrail-1 openstack-1 csn-1 compute-1 compute-2
        appformix-1 appformix-flow-1"


launch_builder()
{
    local arr=(${vm_address_list[command]})
    local host=${arr[0]}

    echo "Launch builder..."
    #copy_ssh_key $host
    #ssh $host yum install -y ansible git
    #install_openstack_deployer $host
    install_command $host
}

delete_builder()
{
    echo "Delete builder..."
}

install_libvirt_client()
{
    local arr=(${vm_address_list[compute-1]})

    echo "Install libvirt-client on compute..."
    ssh ${arr[0]} "yum install -y libvirt-client"
}

pre_cluster()
{
    echo "Pre-Deployment"
    upgrade_kernel "csn-1" "wait"
    upgrade_kernel "compute-1" "wait"
    upgrade_kernel "compute-2" "wait"    
    install_libvirt_client
}

deploy()
{
    local arr=(${vm_address_list[command]})
    local host=${arr[0]}

    #upload_instances_yaml $host
    #if [ -n "$contrail_playbook" ]; then
    #    load_playbook $contrail_playbook $host
    #fi
    #run_playbook $host "deploy-openstack"

    echo "Uploading AppFormix packages..."
    scp -r /opt/appformix $host:/opt/appformix
    scp -r /opt/appformix-flow $host:/opt/appformix-flow

    echo "Launch Contrail Command..."
    scp cluster/$poc_cluster/instances.yaml $host:./instances.yaml
    ssh $host "./builder launch-command $host openstack provision_cluster"
}

patch_nova_compute()
{
    local arr=(${vm_address_list[compute-1]})
    local host=${arr[0]}

    ssh $host "sed -i '/\[libvirt\]/ a\cpu_mode=none' \
      /etc/kolla/nova-compute/nova.conf"
    ssh $host "sed -i '/\[libvirt\]/ a\virt_type=qemu'\
      /etc/kolla/nova-compute/nova.conf"
    ssh $host "docker restart nova_compute"
}

patch_fabric_playbook()
{
    local arr=(${vm_address_list[contrail-1]})
    local host=${arr[0]}
    local list=$(cat playbook.patch | awk "/\+\+\+/"'{print $2}')
    local file
    local name

    ssh $host "yum install -y patch"
    scp playbook.patch $host:./
    for file in $list; do
        ssh $host "docker cp config_api_1:$file ./"
    done
    ssh $host "patch < playbook.patch"
    for file in $list; do
        name=$(echo $file | awk -F / '{print $8}')
        ssh $host "docker cp $name config_api_1:$file"
    done
}

configure_poc()
{
    local arr=(${vm_address_list[openstack-1]})
    local host=${arr[0]}

    scp $image_path/$image_cirros $host:/etc/kolla/kolla-toolbox/
    scp bms-enroll.initrd $host:/etc/kolla/kolla-toolbox/
    scp bms-enroll.vmlinuz $host:/etc/kolla/kolla-toolbox/
    scp bms.initrd $host:/etc/kolla/kolla-toolbox/
    scp bms.vmlinuz $host:/etc/kolla/kolla-toolbox/
    scp bms.qcow2 $host:/etc/kolla/kolla-toolbox/
    scp configure-poc $host:/etc/kolla/kolla-toolbox/
    ssh $host "docker exec kolla_toolbox \
      /var/lib/kolla/config_files/configure-poc"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/$image_cirros"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/bms-enroll.vmlinuz"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/bms-enroll.initrd"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/bms.vmlinuz"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/bms.initrd"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/bms.qcow2"
    ssh $host "rm -f /etc/kolla/kolla-toolbox/configure-poc"
}

add_static_route()
{
    local arr
    local host
    local name

    echo "Add static route..."
    for name in $server_list; do
        arr=(${vm_address_list[$name]})
        host=${arr[0]}
        ssh $host ip route add 10.6.0.0/24 via 10.6.11.254
    done
}

launch_command()
{
    local host=$1

    echo "Launch Contrail Command..."
    #scp cluster/$poc_cluster/instances.yaml $host:./instances.yaml
    #ssh $host "./builder launch-command $host openstack import_cluster"
    ssh $host "./builder launch-command $host"
}
 
launch_appformix()
{
    local arr=(${vm_address_list[appformix-1]})
    local host=${arr[0]}

    install_libvirt_client

    file_list="
        $appformix_license
        appformix-3.1.2.tar.gz
        appformix-dependencies-images-3.1.2.tar.gz
        appformix-openstack-images-3.1.2.tar.gz
        appformix-platform-images-3.1.2.tar.gz
        appformix-network_device-images-3.1.2.tar.gz"

    echo "Launch AppFormix..."
    copy_ssh_key $host
    for file in $file_list; do
        scp /opt/appformix/$file $host:.
    done
    scp poc.conf $host:.
    scp cluster/builder $host:.
    ssh $host "./builder install-appformix"
    scp cluster/$poc_cluster/appformix-hosts $host:./hosts
    scp cluster/$poc_cluster/appformix-all $host:./all
    scp cluster/appformix/appformix-playbook.patch $host:.
    ssh $host "./builder launch-appformix"
}

post_cluster()
{
    local arr

    echo "Post-Deployment"
    add_static_route
    configure_haproxy

    arr=(${vm_address_list[openstack-1]})
    configure_openstack ${arr[0]}
    #configure_poc

    #arr=(${vm_address_list[contrail-1]})
    #install_command ${arr[0]}
    #launch_command ${arr[0]}
    #launch_appformix
}

